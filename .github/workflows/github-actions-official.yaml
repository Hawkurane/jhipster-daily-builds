#
# Copyright 2013-2019 the original author or authors from the JHipster project.
#
# This file is part of the JHipster project, see https://www.jhipster.tech/
# for more information.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

name: Official
on: [push, pull_request]
# on:
#   schedule:
#     - cron: '0 0 * * *'
env:
    # JHI_SCRIPTS: ./test-integration/jdl-scripts
    JHI_PROFILE: dev
    JHI_RUN_APP: 1
    JHI_PROTRACTOR: 0
    JHI_ENTITY: sql
    JHI_JDK: '11'
    # if JHI_LIB_BRANCH value is release, use the release from Maven
    JHI_LIB_REPO: https://github.com/jhipster/jhipster.git
    JHI_LIB_BRANCH: master
    # if JHI_GEN_BRANCH value is release, use the release from NPM
    JHI_GEN_REPO: https://github.com/jhipster/generator-jhipster.git
    JHI_GEN_BRANCH: master
    # specific config
    SPRING_OUTPUT_ANSI_ENABLED: NEVER
    SPRING_JPA_SHOW_SQL: false
    JHI_DISABLE_WEBPACK_LOGS: true
    JHI_E2E_HEADLESS: true
    JHI_SCRIPTS: $HOME/generator-jhipster/test-integration/scripts
    NG_CLI_ANALYTICS: 'false'
    JHI_GITHUB_CI: true

jobs:
    applications:
        name: ${{ matrix.app-type }}
        runs-on: ${{ matrix.os }}
        if: "!contains(github.event.head_commit.message, '[ci skip]') && !contains(github.event.head_commit.message, '[skip ci]')"
        timeout-minutes: 40
        strategy:
            fail-fast: false
            matrix:
                node_version: [12.13.1]
                os: [ubuntu-latest]
                app-type:
                  - ngx-default
                  - ngx-psql-es-noi18n-mapsid
                  - ngx-gradle-fr
                  - ngx-mariadb-oauth2-sass-infinispan
                  - ms-ngx-gateway-eureka
                  - ms-micro-eureka
                  - ngx-mongodb-kafka-cucumber
                  - react-default
                  - react-noi18n-es-ws-gradle-session
                  - ms-ngx-gateway-eureka-oauth2
                  - ms-ngx-gateway-consul
                  - ms-ngx-gateway-uaa
                  - ms-micro-consul
                  - ngx-session-cassandra-fr
                  - ngx-couchbase
                  - webflux-mongodb
                include:
                  - app-type: ngx-default
                    entity: sql
                    profile: prod
                    protractor: 1
                  - app-type: ngx-psql-es-noi18n-mapsid
                    entity: sql
                    profile: prod
                    protractor: 1
                  - app-type: ngx-gradle-fr
                    entity: sql
                    profile: prod
                    protractor: 1
                  - app-type: ngx-mariadb-oauth2-sass-infinispan
                    entity: sql
                    profile: prod
                    protractor: 1
                  - app-type: ms-ngx-gateway-eureka
                    entity: sql
                  - app-type: ms-micro-eureka
                    entity: micro
                  - app-type: ngx-mongodb-kafka-cucumber
                    entity: mongodb
                  - app-type: react-default
                    profile: prod
                    protractor: 1
                    entity: sql
                  - app-type: react-noi18n-es-ws-gradle-session
                    profile: prod
                    protractor: 1
                    entity: sql
                  - app-type: ms-ngx-gateway-eureka-oauth2
                    protractor: 1
                    entity: sql
                  - app-type: ms-ngx-gateway-consul
                    entity: sql
                  - app-type: ms-ngx-gateway-uaa
                    entity: uaa
                  - app-type: ms-micro-consul
                    entity: micro
                  - app-type: ngx-session-cassandra-fr
                    entity: cassandra
                  - app-type: ngx-couchbase
                    profile: prod
                    entity: couchbase
                  - app-type: webflux-mongodb
                    entity: none
        env:
          JHI_ENTITY: ${{ matrix.entity }}
          JHI_APP: ${{ matrix.app-type }}
          JHI_PROFILE: ${{ matrix.profile }}
          JHI_WAR: ${{ matrix.war }}
          JHI_PROTRACTOR: ${{ matrix.protractor }}
        steps:
            #----------------------------------------------------------------------
            # Install all tools and check configuration
            #----------------------------------------------------------------------
            - uses: actions/checkout@v2
            - uses: actions/setup-node@v1
              with:
                  node-version: ${{ matrix.node_version }}
            - name: Download latest chrome binary
              run: |
                  sudo apt update
                  sudo apt install google-chrome-stable
            - uses: actions/setup-java@v1
              with:
                  java-version: '11.x'
            - name: 'TOOLS: display configuration'
              run: ./test-integration/scripts/01-display-configuration.sh
            - name: 'TOOLS: configure tools installed by the system'
              run: ./test-integration/scripts/03-system.sh
            - name: 'TOOLS: configure git'
              run: ./test-integration/scripts/04-git-config.sh
            #----------------------------------------------------------------------
            # Install JHipster and generate project+entities
            #----------------------------------------------------------------------
            - name: 'GENERATION: install JHipster'
              run: ./test-integration/scripts/10-install-jhipster-daily-builds.sh
            - name: 'GENERATION: entities'
              run: $JHI_SCRIPTS/11-generate-entities.sh
            - name: 'GENERATION: project'
              run: $JHI_SCRIPTS/12-generate-project.sh
            - name: 'GENERATION: replace version in generated project'
              run: $JHI_SCRIPTS/13-replace-version-generated-project.sh
            - name: 'GENERATION: jhipster info'
              run: $JHI_SCRIPTS/14-jhipster-info.sh
            #----------------------------------------------------------------------
            # Launch tests
            #----------------------------------------------------------------------
            - name: 'TESTS: Start docker-compose containers'
              run: $JHI_SCRIPTS/20-docker-compose.sh
            - name: 'TESTS: backend'
              run: $JHI_SCRIPTS/21-tests-backend.sh
            - name: 'TESTS: frontend'
              run: $JHI_SCRIPTS/22-tests-frontend.sh
            - name: 'TESTS: packaging'
              run: $JHI_SCRIPTS/23-package.sh
            - name: 'TESTS: End-to-End'
              run: $JHI_SCRIPTS/24-tests-e2e.sh
            - name: 'TESTS: Sonar analysis'
              run: $JHI_SCRIPTS/25-sonar-analyze.sh
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}